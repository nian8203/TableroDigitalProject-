#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModeloV2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tableroV2")]
	public partial class DatosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    partial void InsertTipoDocumento(TipoDocumento instance);
    partial void UpdateTipoDocumento(TipoDocumento instance);
    partial void DeleteTipoDocumento(TipoDocumento instance);
    partial void InsertCurso(Curso instance);
    partial void UpdateCurso(Curso instance);
    partial void DeleteCurso(Curso instance);
    partial void InsertUsuarioDb(UsuarioDb instance);
    partial void UpdateUsuarioDb(UsuarioDb instance);
    partial void DeleteUsuarioDb(UsuarioDb instance);
    partial void InsertAlumno(Alumno instance);
    partial void UpdateAlumno(Alumno instance);
    partial void DeleteAlumno(Alumno instance);
    partial void InsertAlumnoCurso(AlumnoCurso instance);
    partial void UpdateAlumnoCurso(AlumnoCurso instance);
    partial void DeleteAlumnoCurso(AlumnoCurso instance);
    partial void InsertAsignatura(Asignatura instance);
    partial void UpdateAsignatura(Asignatura instance);
    partial void DeleteAsignatura(Asignatura instance);
    partial void InsertCursoAsignatura(CursoAsignatura instance);
    partial void UpdateCursoAsignatura(CursoAsignatura instance);
    partial void DeleteCursoAsignatura(CursoAsignatura instance);
    partial void InsertEvidencia(Evidencia instance);
    partial void UpdateEvidencia(Evidencia instance);
    partial void DeleteEvidencia(Evidencia instance);
    partial void InsertAlumnoEvidencia(AlumnoEvidencia instance);
    partial void UpdateAlumnoEvidencia(AlumnoEvidencia instance);
    partial void DeleteAlumnoEvidencia(AlumnoEvidencia instance);
    #endregion
		
		public DatosDataContext() : 
				base(global::ModeloV2.Properties.Settings.Default.tableroV2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Estado> Estado
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rol
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
		
		public System.Data.Linq.Table<TipoDocumento> TipoDocumento
		{
			get
			{
				return this.GetTable<TipoDocumento>();
			}
		}
		
		public System.Data.Linq.Table<Curso> Curso
		{
			get
			{
				return this.GetTable<Curso>();
			}
		}
		
		public System.Data.Linq.Table<UsuarioDb> UsuarioDb
		{
			get
			{
				return this.GetTable<UsuarioDb>();
			}
		}
		
		public System.Data.Linq.Table<Alumno> Alumno
		{
			get
			{
				return this.GetTable<Alumno>();
			}
		}
		
		public System.Data.Linq.Table<AlumnoCurso> AlumnoCurso
		{
			get
			{
				return this.GetTable<AlumnoCurso>();
			}
		}
		
		public System.Data.Linq.Table<Asignatura> Asignatura
		{
			get
			{
				return this.GetTable<Asignatura>();
			}
		}
		
		public System.Data.Linq.Table<CursoAsignatura> CursoAsignatura
		{
			get
			{
				return this.GetTable<CursoAsignatura>();
			}
		}
		
		public System.Data.Linq.Table<Evidencia> Evidencia
		{
			get
			{
				return this.GetTable<Evidencia>();
			}
		}
		
		public System.Data.Linq.Table<AlumnoEvidencia> AlumnoEvidencia
		{
			get
			{
				return this.GetTable<AlumnoEvidencia>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _estado1;
		
		private EntitySet<UsuarioDb> _UsuarioDb;
		
		private EntitySet<Alumno> _Alumno;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onestado1Changing(string value);
    partial void Onestado1Changed();
    #endregion
		
		public Estado()
		{
			this._UsuarioDb = new EntitySet<UsuarioDb>(new Action<UsuarioDb>(this.attach_UsuarioDb), new Action<UsuarioDb>(this.detach_UsuarioDb));
			this._Alumno = new EntitySet<Alumno>(new Action<Alumno>(this.attach_Alumno), new Action<Alumno>(this.detach_Alumno));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="estado", Storage="_estado1", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string estado1
		{
			get
			{
				return this._estado1;
			}
			set
			{
				if ((this._estado1 != value))
				{
					this.Onestado1Changing(value);
					this.SendPropertyChanging();
					this._estado1 = value;
					this.SendPropertyChanged("estado1");
					this.Onestado1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_UsuarioDb", Storage="_UsuarioDb", ThisKey="id", OtherKey="idEstado")]
		public EntitySet<UsuarioDb> UsuarioDb
		{
			get
			{
				return this._UsuarioDb;
			}
			set
			{
				this._UsuarioDb.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Alumno", Storage="_Alumno", ThisKey="id", OtherKey="idEstado")]
		public EntitySet<Alumno> Alumno
		{
			get
			{
				return this._Alumno;
			}
			set
			{
				this._Alumno.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsuarioDb(UsuarioDb entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_UsuarioDb(UsuarioDb entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
		
		private void attach_Alumno(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Alumno(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tipo;
		
		private EntitySet<UsuarioDb> _UsuarioDb;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    #endregion
		
		public Rol()
		{
			this._UsuarioDb = new EntitySet<UsuarioDb>(new Action<UsuarioDb>(this.attach_UsuarioDb), new Action<UsuarioDb>(this.detach_UsuarioDb));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_UsuarioDb", Storage="_UsuarioDb", ThisKey="id", OtherKey="idRol")]
		public EntitySet<UsuarioDb> UsuarioDb
		{
			get
			{
				return this._UsuarioDb;
			}
			set
			{
				this._UsuarioDb.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsuarioDb(UsuarioDb entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_UsuarioDb(UsuarioDb entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoDocumento")]
	public partial class TipoDocumento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tipo;
		
		private EntitySet<UsuarioDb> _UsuarioDb;
		
		private EntitySet<Alumno> _Alumno;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    #endregion
		
		public TipoDocumento()
		{
			this._UsuarioDb = new EntitySet<UsuarioDb>(new Action<UsuarioDb>(this.attach_UsuarioDb), new Action<UsuarioDb>(this.detach_UsuarioDb));
			this._Alumno = new EntitySet<Alumno>(new Action<Alumno>(this.attach_Alumno), new Action<Alumno>(this.detach_Alumno));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDocumento_UsuarioDb", Storage="_UsuarioDb", ThisKey="id", OtherKey="idTipoDocumento")]
		public EntitySet<UsuarioDb> UsuarioDb
		{
			get
			{
				return this._UsuarioDb;
			}
			set
			{
				this._UsuarioDb.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDocumento_Alumno", Storage="_Alumno", ThisKey="id", OtherKey="idTipoDocumento")]
		public EntitySet<Alumno> Alumno
		{
			get
			{
				return this._Alumno;
			}
			set
			{
				this._Alumno.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsuarioDb(UsuarioDb entity)
		{
			this.SendPropertyChanging();
			entity.TipoDocumento = this;
		}
		
		private void detach_UsuarioDb(UsuarioDb entity)
		{
			this.SendPropertyChanging();
			entity.TipoDocumento = null;
		}
		
		private void attach_Alumno(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.TipoDocumento = this;
		}
		
		private void detach_Alumno(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.TipoDocumento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Curso")]
	public partial class Curso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _curso1;
		
		private EntitySet<AlumnoCurso> _AlumnoCurso;
		
		private EntitySet<CursoAsignatura> _CursoAsignatura;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncurso1Changing(string value);
    partial void Oncurso1Changed();
    #endregion
		
		public Curso()
		{
			this._AlumnoCurso = new EntitySet<AlumnoCurso>(new Action<AlumnoCurso>(this.attach_AlumnoCurso), new Action<AlumnoCurso>(this.detach_AlumnoCurso));
			this._CursoAsignatura = new EntitySet<CursoAsignatura>(new Action<CursoAsignatura>(this.attach_CursoAsignatura), new Action<CursoAsignatura>(this.detach_CursoAsignatura));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="curso", Storage="_curso1", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string curso1
		{
			get
			{
				return this._curso1;
			}
			set
			{
				if ((this._curso1 != value))
				{
					this.Oncurso1Changing(value);
					this.SendPropertyChanging();
					this._curso1 = value;
					this.SendPropertyChanged("curso1");
					this.Oncurso1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curso_AlumnoCurso", Storage="_AlumnoCurso", ThisKey="id", OtherKey="idCurso")]
		public EntitySet<AlumnoCurso> AlumnoCurso
		{
			get
			{
				return this._AlumnoCurso;
			}
			set
			{
				this._AlumnoCurso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curso_CursoAsignatura", Storage="_CursoAsignatura", ThisKey="id", OtherKey="idCurso")]
		public EntitySet<CursoAsignatura> CursoAsignatura
		{
			get
			{
				return this._CursoAsignatura;
			}
			set
			{
				this._CursoAsignatura.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlumnoCurso(AlumnoCurso entity)
		{
			this.SendPropertyChanging();
			entity.Curso = this;
		}
		
		private void detach_AlumnoCurso(AlumnoCurso entity)
		{
			this.SendPropertyChanging();
			entity.Curso = null;
		}
		
		private void attach_CursoAsignatura(CursoAsignatura entity)
		{
			this.SendPropertyChanging();
			entity.Curso = this;
		}
		
		private void detach_CursoAsignatura(CursoAsignatura entity)
		{
			this.SendPropertyChanging();
			entity.Curso = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsuarioDb")]
	public partial class UsuarioDb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _telefono;
		
		private string _direccion;
		
		private string _correo;
		
		private string _pass;
		
		private int _idEstado;
		
		private int _idRol;
		
		private int _idTipoDocumento;
		
		private EntitySet<Alumno> _Alumno;
		
		private EntitySet<CursoAsignatura> _CursoAsignatura;
		
		private EntityRef<Estado> _Estado;
		
		private EntityRef<Rol> _Rol;
		
		private EntityRef<TipoDocumento> _TipoDocumento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OnidRolChanging(int value);
    partial void OnidRolChanged();
    partial void OnidTipoDocumentoChanging(int value);
    partial void OnidTipoDocumentoChanged();
    #endregion
		
		public UsuarioDb()
		{
			this._Alumno = new EntitySet<Alumno>(new Action<Alumno>(this.attach_Alumno), new Action<Alumno>(this.detach_Alumno));
			this._CursoAsignatura = new EntitySet<CursoAsignatura>(new Action<CursoAsignatura>(this.attach_CursoAsignatura), new Action<CursoAsignatura>(this.detach_CursoAsignatura));
			this._Estado = default(EntityRef<Estado>);
			this._Rol = default(EntityRef<Rol>);
			this._TipoDocumento = default(EntityRef<TipoDocumento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstado", DbType="Int NOT NULL")]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRol", DbType="Int NOT NULL")]
		public int idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoDocumento", DbType="Int NOT NULL")]
		public int idTipoDocumento
		{
			get
			{
				return this._idTipoDocumento;
			}
			set
			{
				if ((this._idTipoDocumento != value))
				{
					if (this._TipoDocumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoDocumentoChanging(value);
					this.SendPropertyChanging();
					this._idTipoDocumento = value;
					this.SendPropertyChanged("idTipoDocumento");
					this.OnidTipoDocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioDb_Alumno", Storage="_Alumno", ThisKey="id", OtherKey="idAcudiente")]
		public EntitySet<Alumno> Alumno
		{
			get
			{
				return this._Alumno;
			}
			set
			{
				this._Alumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioDb_CursoAsignatura", Storage="_CursoAsignatura", ThisKey="id", OtherKey="idDocente")]
		public EntitySet<CursoAsignatura> CursoAsignatura
		{
			get
			{
				return this._CursoAsignatura;
			}
			set
			{
				this._CursoAsignatura.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_UsuarioDb", Storage="_Estado", ThisKey="idEstado", OtherKey="id", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.UsuarioDb.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.UsuarioDb.Add(this);
						this._idEstado = value.id;
					}
					else
					{
						this._idEstado = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_UsuarioDb", Storage="_Rol", ThisKey="idRol", OtherKey="id", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.UsuarioDb.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.UsuarioDb.Add(this);
						this._idRol = value.id;
					}
					else
					{
						this._idRol = default(int);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDocumento_UsuarioDb", Storage="_TipoDocumento", ThisKey="idTipoDocumento", OtherKey="id", IsForeignKey=true)]
		public TipoDocumento TipoDocumento
		{
			get
			{
				return this._TipoDocumento.Entity;
			}
			set
			{
				TipoDocumento previousValue = this._TipoDocumento.Entity;
				if (((previousValue != value) 
							|| (this._TipoDocumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoDocumento.Entity = null;
						previousValue.UsuarioDb.Remove(this);
					}
					this._TipoDocumento.Entity = value;
					if ((value != null))
					{
						value.UsuarioDb.Add(this);
						this._idTipoDocumento = value.id;
					}
					else
					{
						this._idTipoDocumento = default(int);
					}
					this.SendPropertyChanged("TipoDocumento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alumno(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioDb = this;
		}
		
		private void detach_Alumno(Alumno entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioDb = null;
		}
		
		private void attach_CursoAsignatura(CursoAsignatura entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioDb = this;
		}
		
		private void detach_CursoAsignatura(CursoAsignatura entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioDb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alumno")]
	public partial class Alumno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _telefono;
		
		private string _direccion;
		
		private string _correo;
		
		private int _idEstado;
		
		private string _idAcudiente;
		
		private int _idTipoDocumento;
		
		private EntitySet<AlumnoCurso> _AlumnoCurso;
		
		private EntitySet<AlumnoEvidencia> _AlumnoEvidencia;
		
		private EntityRef<UsuarioDb> _UsuarioDb;
		
		private EntityRef<Estado> _Estado;
		
		private EntityRef<TipoDocumento> _TipoDocumento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OnidAcudienteChanging(string value);
    partial void OnidAcudienteChanged();
    partial void OnidTipoDocumentoChanging(int value);
    partial void OnidTipoDocumentoChanged();
    #endregion
		
		public Alumno()
		{
			this._AlumnoCurso = new EntitySet<AlumnoCurso>(new Action<AlumnoCurso>(this.attach_AlumnoCurso), new Action<AlumnoCurso>(this.detach_AlumnoCurso));
			this._AlumnoEvidencia = new EntitySet<AlumnoEvidencia>(new Action<AlumnoEvidencia>(this.attach_AlumnoEvidencia), new Action<AlumnoEvidencia>(this.detach_AlumnoEvidencia));
			this._UsuarioDb = default(EntityRef<UsuarioDb>);
			this._Estado = default(EntityRef<Estado>);
			this._TipoDocumento = default(EntityRef<TipoDocumento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstado", DbType="Int NOT NULL")]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAcudiente", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string idAcudiente
		{
			get
			{
				return this._idAcudiente;
			}
			set
			{
				if ((this._idAcudiente != value))
				{
					if (this._UsuarioDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAcudienteChanging(value);
					this.SendPropertyChanging();
					this._idAcudiente = value;
					this.SendPropertyChanged("idAcudiente");
					this.OnidAcudienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoDocumento", DbType="Int NOT NULL")]
		public int idTipoDocumento
		{
			get
			{
				return this._idTipoDocumento;
			}
			set
			{
				if ((this._idTipoDocumento != value))
				{
					if (this._TipoDocumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoDocumentoChanging(value);
					this.SendPropertyChanging();
					this._idTipoDocumento = value;
					this.SendPropertyChanged("idTipoDocumento");
					this.OnidTipoDocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_AlumnoCurso", Storage="_AlumnoCurso", ThisKey="id", OtherKey="idAlumno")]
		public EntitySet<AlumnoCurso> AlumnoCurso
		{
			get
			{
				return this._AlumnoCurso;
			}
			set
			{
				this._AlumnoCurso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_AlumnoEvidencia", Storage="_AlumnoEvidencia", ThisKey="id", OtherKey="idAlumno")]
		public EntitySet<AlumnoEvidencia> AlumnoEvidencia
		{
			get
			{
				return this._AlumnoEvidencia;
			}
			set
			{
				this._AlumnoEvidencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioDb_Alumno", Storage="_UsuarioDb", ThisKey="idAcudiente", OtherKey="id", IsForeignKey=true)]
		public UsuarioDb UsuarioDb
		{
			get
			{
				return this._UsuarioDb.Entity;
			}
			set
			{
				UsuarioDb previousValue = this._UsuarioDb.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioDb.Entity = null;
						previousValue.Alumno.Remove(this);
					}
					this._UsuarioDb.Entity = value;
					if ((value != null))
					{
						value.Alumno.Add(this);
						this._idAcudiente = value.id;
					}
					else
					{
						this._idAcudiente = default(string);
					}
					this.SendPropertyChanged("UsuarioDb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Alumno", Storage="_Estado", ThisKey="idEstado", OtherKey="id", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Alumno.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Alumno.Add(this);
						this._idEstado = value.id;
					}
					else
					{
						this._idEstado = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDocumento_Alumno", Storage="_TipoDocumento", ThisKey="idTipoDocumento", OtherKey="id", IsForeignKey=true)]
		public TipoDocumento TipoDocumento
		{
			get
			{
				return this._TipoDocumento.Entity;
			}
			set
			{
				TipoDocumento previousValue = this._TipoDocumento.Entity;
				if (((previousValue != value) 
							|| (this._TipoDocumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoDocumento.Entity = null;
						previousValue.Alumno.Remove(this);
					}
					this._TipoDocumento.Entity = value;
					if ((value != null))
					{
						value.Alumno.Add(this);
						this._idTipoDocumento = value.id;
					}
					else
					{
						this._idTipoDocumento = default(int);
					}
					this.SendPropertyChanged("TipoDocumento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlumnoCurso(AlumnoCurso entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_AlumnoCurso(AlumnoCurso entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
		
		private void attach_AlumnoEvidencia(AlumnoEvidencia entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = this;
		}
		
		private void detach_AlumnoEvidencia(AlumnoEvidencia entity)
		{
			this.SendPropertyChanging();
			entity.Alumno = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlumnoCurso")]
	public partial class AlumnoCurso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idCurso;
		
		private string _idAlumno;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Curso> _Curso;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidCursoChanging(int value);
    partial void OnidCursoChanged();
    partial void OnidAlumnoChanging(string value);
    partial void OnidAlumnoChanged();
    #endregion
		
		public AlumnoCurso()
		{
			this._Alumno = default(EntityRef<Alumno>);
			this._Curso = default(EntityRef<Curso>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCurso", DbType="Int NOT NULL")]
		public int idCurso
		{
			get
			{
				return this._idCurso;
			}
			set
			{
				if ((this._idCurso != value))
				{
					if (this._Curso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCursoChanging(value);
					this.SendPropertyChanging();
					this._idCurso = value;
					this.SendPropertyChanged("idCurso");
					this.OnidCursoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlumno", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string idAlumno
		{
			get
			{
				return this._idAlumno;
			}
			set
			{
				if ((this._idAlumno != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idAlumno = value;
					this.SendPropertyChanged("idAlumno");
					this.OnidAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_AlumnoCurso", Storage="_Alumno", ThisKey="idAlumno", OtherKey="id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.AlumnoCurso.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.AlumnoCurso.Add(this);
						this._idAlumno = value.id;
					}
					else
					{
						this._idAlumno = default(string);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curso_AlumnoCurso", Storage="_Curso", ThisKey="idCurso", OtherKey="id", IsForeignKey=true)]
		public Curso Curso
		{
			get
			{
				return this._Curso.Entity;
			}
			set
			{
				Curso previousValue = this._Curso.Entity;
				if (((previousValue != value) 
							|| (this._Curso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Curso.Entity = null;
						previousValue.AlumnoCurso.Remove(this);
					}
					this._Curso.Entity = value;
					if ((value != null))
					{
						value.AlumnoCurso.Add(this);
						this._idCurso = value.id;
					}
					else
					{
						this._idCurso = default(int);
					}
					this.SendPropertyChanged("Curso");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asignatura")]
	public partial class Asignatura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _materia;
		
		private EntitySet<CursoAsignatura> _CursoAsignatura;
		
		private EntitySet<Evidencia> _Evidencia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmateriaChanging(string value);
    partial void OnmateriaChanged();
    #endregion
		
		public Asignatura()
		{
			this._CursoAsignatura = new EntitySet<CursoAsignatura>(new Action<CursoAsignatura>(this.attach_CursoAsignatura), new Action<CursoAsignatura>(this.detach_CursoAsignatura));
			this._Evidencia = new EntitySet<Evidencia>(new Action<Evidencia>(this.attach_Evidencia), new Action<Evidencia>(this.detach_Evidencia));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materia", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string materia
		{
			get
			{
				return this._materia;
			}
			set
			{
				if ((this._materia != value))
				{
					this.OnmateriaChanging(value);
					this.SendPropertyChanging();
					this._materia = value;
					this.SendPropertyChanged("materia");
					this.OnmateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asignatura_CursoAsignatura", Storage="_CursoAsignatura", ThisKey="id", OtherKey="idAsignatura")]
		public EntitySet<CursoAsignatura> CursoAsignatura
		{
			get
			{
				return this._CursoAsignatura;
			}
			set
			{
				this._CursoAsignatura.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asignatura_Evidencia", Storage="_Evidencia", ThisKey="id", OtherKey="idAsignatura")]
		public EntitySet<Evidencia> Evidencia
		{
			get
			{
				return this._Evidencia;
			}
			set
			{
				this._Evidencia.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CursoAsignatura(CursoAsignatura entity)
		{
			this.SendPropertyChanging();
			entity.Asignatura = this;
		}
		
		private void detach_CursoAsignatura(CursoAsignatura entity)
		{
			this.SendPropertyChanging();
			entity.Asignatura = null;
		}
		
		private void attach_Evidencia(Evidencia entity)
		{
			this.SendPropertyChanging();
			entity.Asignatura = this;
		}
		
		private void detach_Evidencia(Evidencia entity)
		{
			this.SendPropertyChanging();
			entity.Asignatura = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CursoAsignatura")]
	public partial class CursoAsignatura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idAsignatura;
		
		private string _idDocente;
		
		private System.Nullable<int> _idCurso;
		
		private EntityRef<Asignatura> _Asignatura;
		
		private EntityRef<Curso> _Curso;
		
		private EntityRef<UsuarioDb> _UsuarioDb;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidAsignaturaChanging(int value);
    partial void OnidAsignaturaChanged();
    partial void OnidDocenteChanging(string value);
    partial void OnidDocenteChanged();
    partial void OnidCursoChanging(System.Nullable<int> value);
    partial void OnidCursoChanged();
    #endregion
		
		public CursoAsignatura()
		{
			this._Asignatura = default(EntityRef<Asignatura>);
			this._Curso = default(EntityRef<Curso>);
			this._UsuarioDb = default(EntityRef<UsuarioDb>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAsignatura", DbType="Int NOT NULL")]
		public int idAsignatura
		{
			get
			{
				return this._idAsignatura;
			}
			set
			{
				if ((this._idAsignatura != value))
				{
					if (this._Asignatura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAsignaturaChanging(value);
					this.SendPropertyChanging();
					this._idAsignatura = value;
					this.SendPropertyChanged("idAsignatura");
					this.OnidAsignaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDocente", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string idDocente
		{
			get
			{
				return this._idDocente;
			}
			set
			{
				if ((this._idDocente != value))
				{
					if (this._UsuarioDb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDocenteChanging(value);
					this.SendPropertyChanging();
					this._idDocente = value;
					this.SendPropertyChanged("idDocente");
					this.OnidDocenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCurso", DbType="Int")]
		public System.Nullable<int> idCurso
		{
			get
			{
				return this._idCurso;
			}
			set
			{
				if ((this._idCurso != value))
				{
					if (this._Curso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCursoChanging(value);
					this.SendPropertyChanging();
					this._idCurso = value;
					this.SendPropertyChanged("idCurso");
					this.OnidCursoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asignatura_CursoAsignatura", Storage="_Asignatura", ThisKey="idAsignatura", OtherKey="id", IsForeignKey=true)]
		public Asignatura Asignatura
		{
			get
			{
				return this._Asignatura.Entity;
			}
			set
			{
				Asignatura previousValue = this._Asignatura.Entity;
				if (((previousValue != value) 
							|| (this._Asignatura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Asignatura.Entity = null;
						previousValue.CursoAsignatura.Remove(this);
					}
					this._Asignatura.Entity = value;
					if ((value != null))
					{
						value.CursoAsignatura.Add(this);
						this._idAsignatura = value.id;
					}
					else
					{
						this._idAsignatura = default(int);
					}
					this.SendPropertyChanged("Asignatura");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Curso_CursoAsignatura", Storage="_Curso", ThisKey="idCurso", OtherKey="id", IsForeignKey=true)]
		public Curso Curso
		{
			get
			{
				return this._Curso.Entity;
			}
			set
			{
				Curso previousValue = this._Curso.Entity;
				if (((previousValue != value) 
							|| (this._Curso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Curso.Entity = null;
						previousValue.CursoAsignatura.Remove(this);
					}
					this._Curso.Entity = value;
					if ((value != null))
					{
						value.CursoAsignatura.Add(this);
						this._idCurso = value.id;
					}
					else
					{
						this._idCurso = default(Nullable<int>);
					}
					this.SendPropertyChanged("Curso");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioDb_CursoAsignatura", Storage="_UsuarioDb", ThisKey="idDocente", OtherKey="id", IsForeignKey=true)]
		public UsuarioDb UsuarioDb
		{
			get
			{
				return this._UsuarioDb.Entity;
			}
			set
			{
				UsuarioDb previousValue = this._UsuarioDb.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioDb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioDb.Entity = null;
						previousValue.CursoAsignatura.Remove(this);
					}
					this._UsuarioDb.Entity = value;
					if ((value != null))
					{
						value.CursoAsignatura.Add(this);
						this._idDocente = value.id;
					}
					else
					{
						this._idDocente = default(string);
					}
					this.SendPropertyChanged("UsuarioDb");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evidencia")]
	public partial class Evidencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _descripcion;
		
		private System.DateTime _fecha;
		
		private int _idAsignatura;
		
		private EntitySet<AlumnoEvidencia> _AlumnoEvidencia;
		
		private EntityRef<Asignatura> _Asignatura;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void OnidAsignaturaChanging(int value);
    partial void OnidAsignaturaChanged();
    #endregion
		
		public Evidencia()
		{
			this._AlumnoEvidencia = new EntitySet<AlumnoEvidencia>(new Action<AlumnoEvidencia>(this.attach_AlumnoEvidencia), new Action<AlumnoEvidencia>(this.detach_AlumnoEvidencia));
			this._Asignatura = default(EntityRef<Asignatura>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="Date NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAsignatura", DbType="Int NOT NULL")]
		public int idAsignatura
		{
			get
			{
				return this._idAsignatura;
			}
			set
			{
				if ((this._idAsignatura != value))
				{
					if (this._Asignatura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAsignaturaChanging(value);
					this.SendPropertyChanging();
					this._idAsignatura = value;
					this.SendPropertyChanged("idAsignatura");
					this.OnidAsignaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evidencia_AlumnoEvidencia", Storage="_AlumnoEvidencia", ThisKey="id", OtherKey="idEvidencia")]
		public EntitySet<AlumnoEvidencia> AlumnoEvidencia
		{
			get
			{
				return this._AlumnoEvidencia;
			}
			set
			{
				this._AlumnoEvidencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asignatura_Evidencia", Storage="_Asignatura", ThisKey="idAsignatura", OtherKey="id", IsForeignKey=true)]
		public Asignatura Asignatura
		{
			get
			{
				return this._Asignatura.Entity;
			}
			set
			{
				Asignatura previousValue = this._Asignatura.Entity;
				if (((previousValue != value) 
							|| (this._Asignatura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Asignatura.Entity = null;
						previousValue.Evidencia.Remove(this);
					}
					this._Asignatura.Entity = value;
					if ((value != null))
					{
						value.Evidencia.Add(this);
						this._idAsignatura = value.id;
					}
					else
					{
						this._idAsignatura = default(int);
					}
					this.SendPropertyChanged("Asignatura");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AlumnoEvidencia(AlumnoEvidencia entity)
		{
			this.SendPropertyChanging();
			entity.Evidencia = this;
		}
		
		private void detach_AlumnoEvidencia(AlumnoEvidencia entity)
		{
			this.SendPropertyChanging();
			entity.Evidencia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlumnoEvidencia")]
	public partial class AlumnoEvidencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idEvidencia;
		
		private string _idAlumno;
		
		private decimal _nota;
		
		private EntityRef<Alumno> _Alumno;
		
		private EntityRef<Evidencia> _Evidencia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidEvidenciaChanging(int value);
    partial void OnidEvidenciaChanged();
    partial void OnidAlumnoChanging(string value);
    partial void OnidAlumnoChanged();
    partial void OnnotaChanging(decimal value);
    partial void OnnotaChanged();
    #endregion
		
		public AlumnoEvidencia()
		{
			this._Alumno = default(EntityRef<Alumno>);
			this._Evidencia = default(EntityRef<Evidencia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEvidencia", DbType="Int NOT NULL")]
		public int idEvidencia
		{
			get
			{
				return this._idEvidencia;
			}
			set
			{
				if ((this._idEvidencia != value))
				{
					if (this._Evidencia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEvidenciaChanging(value);
					this.SendPropertyChanging();
					this._idEvidencia = value;
					this.SendPropertyChanged("idEvidencia");
					this.OnidEvidenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlumno", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string idAlumno
		{
			get
			{
				return this._idAlumno;
			}
			set
			{
				if ((this._idAlumno != value))
				{
					if (this._Alumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idAlumno = value;
					this.SendPropertyChanged("idAlumno");
					this.OnidAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nota", DbType="Decimal(4,1) NOT NULL")]
		public decimal nota
		{
			get
			{
				return this._nota;
			}
			set
			{
				if ((this._nota != value))
				{
					this.OnnotaChanging(value);
					this.SendPropertyChanging();
					this._nota = value;
					this.SendPropertyChanged("nota");
					this.OnnotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Alumno_AlumnoEvidencia", Storage="_Alumno", ThisKey="idAlumno", OtherKey="id", IsForeignKey=true)]
		public Alumno Alumno
		{
			get
			{
				return this._Alumno.Entity;
			}
			set
			{
				Alumno previousValue = this._Alumno.Entity;
				if (((previousValue != value) 
							|| (this._Alumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Alumno.Entity = null;
						previousValue.AlumnoEvidencia.Remove(this);
					}
					this._Alumno.Entity = value;
					if ((value != null))
					{
						value.AlumnoEvidencia.Add(this);
						this._idAlumno = value.id;
					}
					else
					{
						this._idAlumno = default(string);
					}
					this.SendPropertyChanged("Alumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evidencia_AlumnoEvidencia", Storage="_Evidencia", ThisKey="idEvidencia", OtherKey="id", IsForeignKey=true)]
		public Evidencia Evidencia
		{
			get
			{
				return this._Evidencia.Entity;
			}
			set
			{
				Evidencia previousValue = this._Evidencia.Entity;
				if (((previousValue != value) 
							|| (this._Evidencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Evidencia.Entity = null;
						previousValue.AlumnoEvidencia.Remove(this);
					}
					this._Evidencia.Entity = value;
					if ((value != null))
					{
						value.AlumnoEvidencia.Add(this);
						this._idEvidencia = value.id;
					}
					else
					{
						this._idEvidencia = default(int);
					}
					this.SendPropertyChanged("Evidencia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
